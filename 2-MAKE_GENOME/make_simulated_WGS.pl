#!/usr/bin/perl

### Guillaume Laval (12 08 2021)
### Script used to build one simulated whole-genome sequence (WGS) data
### This script is provided *as is* without warranty of any kind.

### This script needs two sets of simulated files prepared in advance (one Selink file per simulation with SNPs filtered from DAF values) 
### 
### Set 1: genomic regions simulated under neutrality : the ENV and the neutral PSV regions (psv set to 0 or 1 in logistic files)
###		simulation 1  : user_path_1/Selink_sim1_AFR.out.filtered.txt
###		....
###		simulation N1 : user_path_1/Selink_simN1_AFR.out.filtered.txt

### Set 2: genomic regions simulated under selection  : the X sweeps to simulate in PSV regions (psv set to 1 in logistic files)
### Simulations performed with distributions of s (selection coefficient) and t (age of selection) specifed by users
###		simulation 1  : user_path_2/Selink_sim1_AFR.out.filtered.txt	+	user_path_2/selection_parameters_sim1.txt
###		....
###		simulation N2 : user_path_2/Selink_simN2_AFR.out.filtered.txt	+	user_path_2/selection_parameters_simN2.txt

$neutral   ="$ARGV[0]"; #path to neutral neutral simulations (set 1)
$selected  ="$ARGV[1]"; #path to simulation with selection   (set 2)
$WGS       ="$ARGV[2]"; #path to the logistic files corresponding the WGS data generated by this script
                        #(OR will be computed using these logistic files)
$X         ="$ARGV[3]"; #number of selective sweeps to simulate

$nstat     =1         ; #In this example the OR is computed for the neutrality statistic iHS only. 

#parameter below adjusted to work with the script "RUN_make_genome.sh"
$N1        =3         ; #number of genomic regions simulated under neutrality (generated with the script run_slim2_SWEEP.pl) 
$N2        =3         ; #number of genomic regions simulated under selection  (generated with the script run_slim2_SWEEP.pl)
$Nsnp      =50        ; #total number of SNPs in the simulated WGS, depends on the analyzed emprical populations

$Nenv      =$Nsnp*0.3    ; #30% of ENVs (Evolutionary Neutral Variants)
$Npsv      =$Nsnp*0.7    ; #70% of PSVs (Possibly Selected Variants)
	
$VERBOSE="yes";	
#$VERBOSE="no";	
	
	
	#WGS file: concatenation of simulated 5Mb genomic regions 
	$WGS_name="WGS.txt";
	open($WGS   , ">", $WGS_name)     or die "cannot open < $WGS_name: $!";	
	#PSV files: map of PSV annotation of SNPs in the WGS file
	$PSV_name="PSV.txt";
	open($PSV   , ">", $PSV_name)     or die "cannot open < $PSV_name: $!";
	
	##### Create the WGS data by randomly sampling 5Mb genomic regions previously simulated (Set 1 and Set 2, see above)
	
	#ENV regions randomly sampled among genomic regions simulated under NEUTRALITY (PSV = 0)
	$currNenv=0;		
	for ( $isample=0 ; $isample<$N1 ; $isample++ ) {
		$curr_region=int( rand($N1) ) + 1; ####VERIF !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				
		#count SNPs
		$selinkfile_filtered=$neutral."/"."Selink_sim$curr_region"."_AFR.out.filtered.txt";
		open($tmpfile, "<", "$selinkfile_filtered") or die "cannot open < $selinkfile_filtered: $!";
		$line = <$tmpfile>;#skip header
		if( $isample == 0 ){  #print headers the first time
			print $WGS $line;
			print $PSV "snp\tPSV\n";
		}
		while( defined( $line = <$tmpfile> ) ) {
			$currNenv++;
			print $WGS $line;
			chomp($line); @temp=split(/\t/,$line);
			print $PSV "$temp[0]\t0\n";
		}
		close($tmpfile);
		
		#stop when the desired number of ENVs is reached
		if( $currNenv >= $Nenv ){
			$isample=$N1+1
		}
	}
	
	
	#PSV regions to create X selective SWEEPs (one sweep per region) randomly sampled among genomic regions simulated under SELECTION (PSV = 1)
	$currNpsv=0; $S=0; $T=0;
	if( $VERBOSE eq "yes" ){	
		print "Sampling '$X' sweeps\n";
		print "\tsweep\ts\tt\n";
	}
	for ( $isample=0 ; $isample<$X ; $isample++ ) {
		$curr_region=int( rand($N2) ) + 1; ####VERIF !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
						
		#count SNPs
		$selinkfile_filtered=$selected."/"."Selink_sim$curr_region"."_AFR.out.filtered.txt";
		open($tmpfile, "<", "$selinkfile_filtered") or die "cannot open < $selinkfile_filtered: $!";
		$line = <$tmpfile>;#skip header
		while( defined( $line = <$tmpfile> ) ) {
			$currNenv++;
			print $WGS $line;
			chomp($line); @temp=split(/\t/,$line);
			print $PSV "$temp[0]\t1\n";
		}
		close($tmpfile);
		
		
		#compute the selection parameters S and T
		$selinkfile_param=$selected."/"."selection_parameters_sim$curr_region.txt";
		open($tmpfile, "<", "$selinkfile_param") or die "cannot open < $selinkfile_param: $!";
		$line = <$tmpfile>;chomp($line); @temp=split(/\s+/,$line);
		$T=$T+$temp[0];
		$S=$S+$temp[1];
		close($tmpfile);		
		
		if( $VERBOSE eq "yes" ){	
			print "\t$isample\t$temp[1]\t$temp[0]\n";
		}
	}
	$T=$T/$X;
	$S=$S/$X;
	
	if( $VERBOSE eq "yes" ){
		print "ABC parameters\n";
		print "X\tS\tT\n";
		print "$X\t$S\t$T\n";
	}
	
	#(neutral) PSV regions randomly sampled among genomic regions simulated under NEUTRALITY (PSV = 1)
	for ( $isample=0 ; $isample<$N2 ; $isample++ ) {
		$curr_region=int( rand($N2) ) + 1; ####VERIF !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!		
		
		#count SNPs
		$selinkfile_filtered=$neutral."/"."Selink_sim$curr_region"."_AFR.out.filtered.txt";
		open($tmpfile, "<", "$selinkfile_filtered") or die "cannot open < $selinkfile_filtered: $!";
		$line = <$tmpfile>;#skip header
		while( defined( $line = <$tmpfile> ) ) {
			$currNenv++;
			print $WGS $line;
			chomp($line); @temp=split(/\t/,$line);
			print $PSV "$temp[0]\t1\n";
		}
		close($tmpfile);
		
		#stop when the desired number of ENVs is reached
		if( $currNpsv >= $Npsv ){
			$isample=$N1+1
		}
	}
close($WGS);
close($PSV);
	
	
	
	#Compute the OR for each neutrality statistic used
	for ( $istat=0 ; $istat<$nstat ; $istat++ ) {
	
		#create the logistic file from the $WGS and $PSV files			
		$WGS_file="../2-MAKE_GENOME/".$WGS_name;
		$PSV_file="../2-MAKE_GENOME/".$PSV_name;
		$stat="ihs"; 
		$normalize="yes"; #or no depending on the neutrality statistic used
		$logistic_file="../2-MAKE_GENOME/temp_logistic.txt";
		$command = "cd ../3-MAKE_LOGISTIC_FILES; perl make_Logistic_file.pl $WGS_file $PSV_file $stat $normalize $logistic_file";
		system($command);
		
		#Compute the ORs (option 0 for uncorrected since covariates were not simulated)
		$command = "cd ../4-COMPUTE_OR/; ./OddsRatio.sh $logistic_file 0";
		system($command);
		
		#get the OR values
		$resultfile=$logistic_file.".OR.txt";
		open($result, "<", "$resultfile") or die "cannot open < $resultfile: $!";
		$line = <$result>; #skip header
		$line = <$result>;chomp($line); @temp=split(/\s+/,$line);
		$OR[$istat]=$temp[1];
		close($result);
	}	
	
	#Create the line in the ABC file corresponding to the simulated WGS data
	$ABC_name="ABC.txt";
	open($ABC   , ">", $ABC_name)     or die "cannot open < $ABC_name: $!";	
	#ABC parameters (X, S and T)
	print $ABC "$X\t$S\t$T";
	if( $VERBOSE eq "yes" ){
		print "\n";
		print "ORs (ABC summary statisitcs)\n";
	}
	for ( $istat=0 ; $istat<$nstat ; $istat++ ) {
			print $ABC "\t$OR[$istat]";
			if( $VERBOSE eq "yes" ){
				print "stat $istat\t$OR[$istat]\n";
			}
	}
	print $ABC "\n";
	close($ABC);	